# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
   
    # Black Duck Detect Integration
    - name: Run Black Duck Detect
      run: |
        curl -s -L https://detect.synopsys.com/detect.sh | bash -s -- \
          --blackduck.url=${{ secrets.BLACKDUCK_URL }} \
          --blackduck.api.token=${{ secrets.BLACKDUCK_API_TOKEN }} \
          --detect.project.name="my-java-project" \
          --detect.project.version.name="${{ github.sha }}" \
          --detect.tools=SIGNATURE_SCAN \
          --detect.policy.check.fail.on.severities=BLOCKER,CRITICAL
